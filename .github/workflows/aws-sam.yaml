name: Reusable workflow for AWS SAM
on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        required: true
        type: string
      PROJECT_FOLDER:
        required: true
        type: string

env:
  REQUIREMENTS_FILE: ${{ inputs.PROJECT_FOLDER }}/tests/requirements.txt

jobs:
  requirements:
    runs-on: ubuntu-latest
    name: Requirements
    environment:  auto
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}
      - name: Restore cached virtualenv
        uses: actions/cache/restore@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles(env.REQUIREMENTS_FILE) }}
          path: .venv
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install -r ${{ env.REQUIREMENTS_FILE }}
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
      - name: Saved cached virtualenv
        uses: actions/cache/save@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles(env.REQUIREMENTS_FILE) }}
          path: .venv
      - run: ls -la
      - run: coverage --help
      - name: SAM Validate
        run: |
          sam validate
        working-directory: ${{ inputs.PROJECT_FOLDER }}

  build:
    runs-on: ubuntu-latest
    name: Build
    environment:  auto
    needs: requirements
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}
          cache: 'pip'
      - name: Restore cached virtualenv
        uses: actions/cache/restore@v4
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles(env.REQUIREMENTS_FILE) }}
          path: .venv
      - run: ls -la
      - name: SAM Build
        run: |
          sam build
        working-directory: ${{ inputs.PROJECT_FOLDER }}
      - name: Run unit tests
        run: |
          coverage run -m pytest -v  route-53-automation/tests/unit
        working-directory: ${{ inputs.PROJECT_FOLDER }}
      - name: Coverage Report
        run: coverage report -m